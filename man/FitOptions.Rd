% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FitOptions-constructor.R
\docType{methods}
\name{FitOptions}
\alias{FitOptions}
\alias{FitOptions.data.frame}
\alias{FitOptions.default}
\title{FitOptions constructor}
\usage{
FitOptions(x, ...)

\method{FitOptions}{default}(x, ...)

\method{FitOptions}{data.frame}(x, formula, contrast, ...)
}
\arguments{
\item{x}{There are two options for x:
\itemize{
\item It can be a character vector containing the two conditions (length 
must be the same as the number of subjects to use).
\item It can be a data.frame used as data by 
\code{\link[stats]{model.matrix}}.
}}

\item{...}{not in use.}

\item{formula}{(only used if x is data.frame) used by 
\code{\link[stats]{model.matrix}}.}

\item{contrast}{(only used if x is data.frame) the contrast to test.}
}
\value{
FitOptions object.
}
\description{
\code{FitOptions} creates a FitOptions object. If the vector of samples is
provided (must be two different) then it will contrast Condition1 vs. 
Condition2. If not, it should be provided with a data.frame x, the formula 
and the contrast, it will create the model matrix using x as data, and the 
formula.
}
\examples{
## Supose we have 15 subjects, the first 8 from Condition1 and the last 7 
## from Condition2, lets create the corresponding FitOptions object to test
## Condition1 vs. Condition2.
l <- c(rep("Condition1", 8), rep("Condition2", 7));
fit_options <- FitOptions(l);

## Otherwise if we have the data and formula for model.matrix function and 
## the desired contrast, we can create the FitOptions object as:
myData <- data.frame(cond=c(rep("Condition1", 8), rep("Condition2", 7)));
myFormula <- ~cond - 1;
myContrast <- c(-1, 1);
fit_options <- FitOptions(myData, myFormula, myContrast);

}

